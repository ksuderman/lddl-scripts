// first check if the script is run individually, not through Brandeis.lddl uber script
// NOTE how this checking works! Users should change the path to lddl-script/brandeis before running an individual service registration
String pathAdj = "";
if (new File(".").getCanonicalPath().endsWith("lddl-scripts/brandeis")) {
    pathAdj = "../"
    COPYRIGHT = 'Copyright 2017 Brandeis University'
}

for (String preamble : ["Servers", "Database", "Common", "Functions"]) {
    include pathAdj + preamble
}

def VERSION = "2.0.3"
def ROOT = "http://eldrad.cs-i.brandeis.edu:8282/opennlp-web-service/${VERSION}/services"

License = 'Apache License, Version 2.0'


services = [
    [
      id:'opennlp.postagger',
      name:"OpenNLP (v${VERSION}) POSTagger",
      url:"${ROOT}/POSTagger",
      desc:'OpenNLP POSTagger',
      lang:'en',
      license:License
    ],

    [
      id:'opennlp.tokenizer',
      name:"OpenNLP (v${VERSION}) Tokenizer",
      url:"${ROOT}/Tokenizer",
      desc:'OpenNLP Tokenizer',
      lang:'en',
      license:License
    ],

    [
      id:'opennlp.namedentityrecognizer',
      name:"OpenNLP (v${VERSION}) NamedEntityRecognizer",
      url:"${ROOT}/NamedEntityRecognizer",
      desc:'OpenNLP NamedEntityRecognizer',
      lang:'en',
      license:License
    ],

    [
      id:'opennlp.splitter',
      name:"OpenNLP (v${VERSION}) Splitter",
      url:"${ROOT}/Splitter",
      desc:'OpenNLP Splitter',
      lang:'en',
      license:License
    ],

    [
      id:'opennlp.parser',
      name:"OpenNLP (v${VERSION}) Parser",
      url:"${ROOT}/Parser",
      desc:'OpenNLP Parser',
      lang:'en',
      license:License
    ],

// disabled as of 161206, will be enabeld once old nonstandard json handling is took off from the codebase
    // [
      // id:'opennlp.coref',
      // name:"OpenNLP (v${VERSION}) Coreference",
      // url:"${ROOT}/Coreference",
      // desc:'OpenNLP Coreference',
      // lang:'en',
      // license:License
    // ],
]



services.each {
    comment it.name
    it.id = "${it.id}_${VERSION}"
    register_service(it)
}
